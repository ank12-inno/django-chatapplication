"""
Django settings for infra project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o1u83+qfuxb*(9h=bhqz31@n^v##y^au37+rc%1+d0xzg=sj0+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'chats',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework'
]

LOCKDOWN_ADMIN = False

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [],
    'UNAUTHENTICATED_USER': None,
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'infra.middlewares.resolver.Resolver',
    'infra.middlewares.logging.Logging',
    'infra.middlewares.handle_exception.HandleException',
    'infra.middlewares.request_validation.RequestValidation',
]

ROOT_URLCONF = 'infra.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'TIMEOUT': None
    }
}

WSGI_APPLICATION = 'infra.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.dummy'
  }
}


DATABASE_SETTINGS = {
  'mongodb': {
    'NAME': os.environ.get('MONGO_DB_NAME', 'core'),
    'USER': os.environ.get('MONGO_DB_USER'),
    'PASS': os.environ.get('MONGO_DB_PASSWORD'),
    'HOST': os.environ.get('MONGO_DB_HOST', 'localhost'),
    'PORT': os.environ.get('MONGO_DB_PORT', '27017'),
    'ALIAS': os.environ.get('MONGO_DB_NAME', 'core')
  }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CORS_ORIGIN_WHITELIST = (
    'innovaccer.com'
)

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

TEST_RUNNER = "redgreenunittest.django.runner.RedGreenDiscoverRunner"

# Mongo settings

MONGO_HOST = 'localhost'
MONGO_PORT = '27017'
MONGO_DB = 'core'

# Redis Settings

REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_MAXCONN = 40

DEFAULT_CHARSET = 'utf-8'

# Logger Configuration

import logging.handlers
LOGGER_SOCKET_IP = '127.0.0.1'
LOGGER_SOCKET_PORT = logging.handlers.DEFAULT_TCP_LOGGING_PORT
